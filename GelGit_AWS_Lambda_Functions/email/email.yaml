# This AWS SAM template has been generated from your function's configuration. If
# your function has one or more triggers, note that the AWS resources associated
# with these triggers aren't fully specified in this template and include
# placeholder values. Open this template in AWS Application Composer or your
# favorite IDE and modify it to specify a serverless application with other AWS
# resources.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  email:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: arn:aws:sns:us-east-1:637423226272:BuyTravel
            - Effect: Allow
              Action:
                - cognito-identity:GetOpenIdTokenForDeveloperIdentity
                - cognito-identity:LookupDeveloperIdentity
                - cognito-identity:MergeDeveloperIdentities
                - cognito-identity:UnlinkDeveloperIdentity
              Resource: '*'
            - Effect: Allow
              Action:
                - cognito-identity:*
                - cognito-idp:*
                - cognito-sync:*
                - iam:ListRoles
                - iam:ListOpenIdConnectProviders
                - iam:GetRole
                - iam:ListSAMLProviders
                - iam:GetSAMLProvider
                - kinesis:ListStreams
                - lambda:GetPolicy
                - lambda:ListFunctions
                - sns:GetSMSSandboxAccountStatus
                - sns:ListPlatformApplications
                - ses:ListIdentities
                - ses:GetIdentityVerificationAttributes
                - mobiletargeting:GetApps
                - acm:ListCertificates
              Resource: '*'
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource: '*'
              Condition:
                StringEquals:
                  iam:AWSServiceName:
                    - cognito-idp.amazonaws.com
                    - email.cognito-idp.amazonaws.com
            - Effect: Allow
              Action:
                - iam:DeleteServiceLinkedRole
                - iam:GetServiceLinkedRoleDeletionStatus
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/cognito-idp.amazonaws.com/AWSServiceRoleForAmazonCognitoIdp*
                - >-
                  arn:aws:iam::*:role/aws-service-role/email.cognito-idp.amazonaws.com/AWSServiceRoleForAmazonCognitoIdpEmail*
            - Action:
                - ec2:*
              Effect: Allow
              Resource: '*'
            - Effect: Allow
              Action:
                - elasticloadbalancing:*
              Resource: '*'
            - Effect: Allow
              Action:
                - cloudwatch:*
              Resource: '*'
            - Effect: Allow
              Action:
                - autoscaling:*
              Resource: '*'
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource: '*'
              Condition:
                StringEquals:
                  iam:AWSServiceName:
                    - autoscaling.amazonaws.com
                    - ec2scheduled.amazonaws.com
                    - elasticloadbalancing.amazonaws.com
                    - spot.amazonaws.com
                    - spotfleet.amazonaws.com
                    - transitgateway.amazonaws.com
            - Effect: Allow
              Action:
                - cognito-idp:DescribeUserPool
                - cognito-idp:CreateUserPoolClient
                - cognito-idp:DeleteUserPoolClient
                - cognito-idp:UpdateUserPoolClient
                - cognito-idp:DescribeUserPoolClient
                - cognito-idp:AdminInitiateAuth
                - cognito-idp:AdminUserGlobalSignOut
                - cognito-idp:ListUserPoolClients
                - cognito-identity:DescribeIdentityPool
                - cognito-identity:UpdateIdentityPool
                - cognito-identity:SetIdentityPoolRoles
                - cognito-identity:GetIdentityPoolRoles
              Resource: '*'
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource: '*'
              Condition:
                StringLike:
                  iam:PassedToService:
                    - cognito-identity.amazonaws.com
                    - cognito-identity-us-gov.amazonaws.com
            - Effect: Allow
              Action:
                - ses:*
              Resource: '*'
            - Effect: Allow
              Action:
                - autoscaling:Describe*
                - cloudwatch:*
                - logs:*
                - sns:*
                - iam:GetPolicy
                - iam:GetPolicyVersion
                - iam:GetRole
                - oam:ListSinks
              Resource: '*'
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource: >-
                arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*
              Condition:
                StringLike:
                  iam:AWSServiceName: events.amazonaws.com
            - Effect: Allow
              Action:
                - oam:ListAttachedLinks
              Resource: arn:aws:oam:*:*:sink/*
            - Sid: CloudWatchFullAccessPermissions
              Effect: Allow
              Action:
                - application-autoscaling:DescribeScalingPolicies
                - application-signals:*
                - autoscaling:DescribeAutoScalingGroups
                - autoscaling:DescribePolicies
                - cloudwatch:*
                - logs:*
                - sns:CreateTopic
                - sns:ListSubscriptions
                - sns:ListSubscriptionsByTopic
                - sns:ListTopics
                - sns:Subscribe
                - iam:GetPolicy
                - iam:GetPolicyVersion
                - iam:GetRole
                - oam:ListSinks
                - rum:*
                - synthetics:*
                - xray:*
              Resource: '*'
            - Sid: CloudWatchApplicationSignalsServiceLinkedRolePermissions
              Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource: >-
                arn:aws:iam::*:role/aws-service-role/application-signals.cloudwatch.amazonaws.com/AWSServiceRoleForCloudWatchApplicationSignals
              Condition:
                StringLike:
                  iam:AWSServiceName: application-signals.cloudwatch.amazonaws.com
            - Sid: EventsServicePermissions
              Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource: >-
                arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*
              Condition:
                StringLike:
                  iam:AWSServiceName: events.amazonaws.com
            - Sid: OAMReadPermissions
              Effect: Allow
              Action:
                - oam:ListAttachedLinks
              Resource: arn:aws:oam:*:*:sink/*
            - Effect: Allow
              Action:
                - cloudformation:DescribeStacks
                - cloudformation:ListStackResources
                - cloudwatch:ListMetrics
                - cloudwatch:GetMetricData
                - ec2:DescribeSecurityGroups
                - ec2:DescribeSubnets
                - ec2:DescribeVpcs
                - kms:ListAliases
                - iam:GetPolicy
                - iam:GetPolicyVersion
                - iam:GetRole
                - iam:GetRolePolicy
                - iam:ListAttachedRolePolicies
                - iam:ListRolePolicies
                - iam:ListRoles
                - lambda:*
                - logs:DescribeLogGroups
                - states:DescribeStateMachine
                - states:ListStateMachines
                - tag:GetResources
                - xray:GetTraceSummaries
                - xray:BatchGetTraces
              Resource: '*'
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource: '*'
              Condition:
                StringEquals:
                  iam:PassedToService: lambda.amazonaws.com
            - Effect: Allow
              Action:
                - logs:DescribeLogStreams
                - logs:GetLogEvents
                - logs:FilterLogEvents
              Resource: arn:aws:logs:*:*:log-group:/aws/lambda/*
      SnapStart:
        ApplyOn: None
      Events:
        SNS1:
          Type: SNS
          Properties:
            Topic:
              Ref: SNSTopic1
        Api1:
          Type: Api
          Properties:
            Path: /email
            Method: ANY
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  SNSTopic1:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: SNSTopic1
      KmsMasterKeyId:
        Ref: KMSKeyForSNS1
  KMSKeyForSNS1:
    Type: AWS::KMS::Key
